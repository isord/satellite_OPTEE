# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: CI
on: [push, pull_request]
defaults:
  run:
    shell: bash

jobs:
  build-utee-teec:
    runs-on: ubuntu-latest
    container: teaclave/teaclave-trustzone-sdk-build:0.3.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setting up $HOME
        run: |
          cp /root/.bashrc $HOME/.bashrc &&
          ln -sf /root/.rustup ~/.rustup &&
          ln -sf /root/.cargo ~/.cargo
      - name: Building
        run: |
          export CARGO_NET_GIT_FETCH_WITH_CLI=true
          apt update && apt -y install gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf
          export CROSS_COMPILE="aarch64-linux-gnu-"
          export CROSS_COMPILE32="arm-linux-gnueabihf-"
          export CROSS_COMPILE64="aarch64-linux-gnu-"

          # Build optee_os and optee_client for qemu_v8
          git clone https://github.com/OP-TEE/optee_os.git -b 4.0.0 ~/optee_os
          git clone https://github.com/OP-TEE/optee_client.git -b 4.0.0 ~/optee_client
          (cd ~/optee_os && make PLATFORM=vexpress-qemu_armv8a)
          (cd ~/optee_client && make WITH_TEEACL=0)

          # Build rust optee-utee and optee-teec
          ./setup.sh
          . ~/.cargo/env
          export TA_DEV_KIT_DIR=~/optee_os/out/arm-plat-vexpress/export-ta_arm64/
          export OPTEE_CLIENT_EXPORT=~/optee_client/out/export/
          (cd optee-utee && cargo build --target aarch64-unknown-linux-gnu --no-default-features -vv)
          (cd optee-teec && cargo build --target aarch64-unknown-linux-gnu -vv)

  build-examples:
    runs-on: ubuntu-latest
    container: teaclave/teaclave-trustzone-sdk-build:0.3.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setting up $HOME
        run: |
          cp /root/.bashrc $HOME/.bashrc &&
          ln -sf /root/.rustup ~/.rustup &&
          ln -sf /root/.cargo ~/.cargo
      - name: Building
        run: |
          export CARGO_NET_GIT_FETCH_WITH_CLI=true
          apt update && apt -y install gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf
          export CROSS_COMPILE="aarch64-linux-gnu-"
          export CROSS_COMPILE32="arm-linux-gnueabihf-"
          export CROSS_COMPILE64="aarch64-linux-gnu-"
          export OPTEE_CLIENT_EXPORT=~/optee_client/out/export/
          ./setup.sh
          . ~/.cargo/env

          # Build optee_os and optee_client for qemu_v8
          git clone https://github.com/OP-TEE/optee_os.git -b 4.0.0 ~/optee_os
          git clone https://github.com/OP-TEE/optee_client.git -b 4.0.0 ~/optee_client
          (cd ~/optee_os && make PLATFORM=vexpress-qemu_armv8a)
          (cd ~/optee_client && make WITH_TEEACL=0)

          # Build OP-TEE rust examples for Arm 64-bit both host and TA
          export TA_DEV_KIT_DIR=~/optee_os/out/arm-plat-vexpress/export-ta_arm64/
          make -j`nproc`

          # Build OP-TEE rust examples for Arm 64-bit host and 32-bit TA
          export TA_DEV_KIT_DIR=~/optee_os/out/arm-plat-vexpress/export-ta_arm32/
          export CROSS_COMPILE_HOST=$CROSS_COMPILE64
          export CROSS_COMPILE_TA=$CROSS_COMPILE32
          export TARGET_HOST="aarch64-unknown-linux-gnu"
          export TARGET_TA="arm-unknown-linux-gnueabihf"
          make clean && make -j`nproc`

          # Build OP-TEE rust examples for Arm 32-bit both host and TA
          export TA_DEV_KIT_DIR=~/optee_os/out/arm-plat-vexpress/export-ta_arm32/
          export CROSS_COMPILE_HOST=$CROSS_COMPILE32
          export CROSS_COMPILE_TA=$CROSS_COMPILE32
          export TARGET_HOST="arm-unknown-linux-gnueabihf"
          export TARGET_TA="arm-unknown-linux-gnueabihf"
          (cd ~/optee_client && make clean && make CROSS_COMPILE=$CROSS_COMPILE32 WITH_TEEACL=0)
          make clean && make -j`nproc`

          # Build OP-TEE rust examples for Arm 32-bit host and 64-bit TA
          export TA_DEV_KIT_DIR=~/optee_os/out/arm-plat-vexpress/export-ta_arm64/
          export CROSS_COMPILE_HOST=$CROSS_COMPILE32
          export CROSS_COMPILE_TA=$CROSS_COMPILE64
          export TARGET_HOST="arm-unknown-linux-gnueabihf"
          export TARGET_TA="aarch64-unknown-linux-gnu"
          make clean && make -j`nproc`

  OPTEE-repo-build-and-run-examples-64bit-TAs:
    runs-on: ubuntu-latest
    container: teaclave/teaclave-trustzone-sdk-build:0.3.0
    steps:
      - name: Remove /__t/*
        run: rm -rf /__t/*
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          path: 'incubator-teaclave-trustzone-sdk'
      - name: Checkout OP-TEE repository
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo-1 > ~/bin/repo && chmod a+x ~/bin/repo
          export PATH=~/bin:$PATH
          mkdir -p ~/optee-qemuv8 && cd ~/optee-qemuv8 &&
          repo init -u https://github.com/OP-TEE/manifest.git -m qemu_v8.xml &&
          repo sync -j4 --no-clone-bundle
      - name: Build images and run tests
        run: |
          apt update && apt install libslirp-dev -y
          cd ~/optee-qemuv8
          rm -rf optee_rust/ &&
          mv $GITHUB_WORKSPACE/incubator-teaclave-trustzone-sdk optee_rust/
          cd build &&
          make -j3 toolchains &&
          make -j`nproc` RUST_ENABLE=y check

  OPTEE-repo-build-and-run-examples-32bit-TAs:
    runs-on: ubuntu-latest
    container: teaclave/teaclave-trustzone-sdk-build:0.3.0
    steps:
      - name: Remove /__t/*
        run: rm -rf /__t/*
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          path: 'incubator-teaclave-trustzone-sdk'
      - name: Checkout OP-TEE repository
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo-1 > ~/bin/repo && chmod a+x ~/bin/repo
          export PATH=~/bin:$PATH
          mkdir -p ~/optee-qemuv8 && cd ~/optee-qemuv8 &&
          repo init -u https://github.com/OP-TEE/manifest.git -m qemu_v8.xml &&
          repo sync -j4 --no-clone-bundle
      - name: Build images and run tests
        run: |
          apt update && apt install libslirp-dev -y
          cd ~/optee-qemuv8
          rm -rf optee_rust/ &&
          mv $GITHUB_WORKSPACE/incubator-teaclave-trustzone-sdk optee_rust/
          cd build &&
          make -j3 toolchains &&
          make -j`nproc` RUST_ENABLE=y COMPILE_S_USER=32 check

  license:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check License Header
        uses: apache/skywalking-eyes/header@501a28d2fb4a9b962661987e50cf0219631b32ff
